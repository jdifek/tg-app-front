"use client";

import { useRouter, useSearchParams } from "next/navigation";
import { ArrowLeft, Star } from "lucide-react";
import { apiFetch } from "@/app/http";
import { toast } from "react-hot-toast";
import { useState, useEffect, Suspense } from "react";
import { useUser } from "@/app/context/UserContext";

export const dynamic = "force-dynamic";

function StarsPayPageContent() {
  const router = useRouter();
  const { user } = useUser(); // –±–µ—Ä—ë–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  const searchParams = useSearchParams();
  const [starsPrice, setStarsPrice] = useState<number>(0);
  const [isLoading, setIsLoading] = useState(false);
  const [isTelegramAvailable, setIsTelegramAvailable] = useState(false);

  // —Ü–µ–Ω–∞ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  const priceUSD = searchParams.get("price")
    ? parseFloat(searchParams.get("price")!)
    : 0;

  // –∫—É—Ä—Å Stars ‚Üí USD
  const USD_TO_STARS = 100; // 1 USD ‚âà 100 Stars

  useEffect(() => {
    setStarsPrice(Math.round(priceUSD * USD_TO_STARS));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp
    const checkTelegram = () => {
      if (window.Telegram?.WebApp) {
        setIsTelegramAvailable(true);
        window.Telegram.WebApp.ready();
        console.log("‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
      } else {
        setIsTelegramAvailable(false);
        console.warn("‚ö†Ô∏è Telegram WebApp –Ω–µ –Ω–∞–π–¥–µ–Ω");
      }
    };

    // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Å–∫—Ä–∏–ø—Ç–∞
    if (typeof window !== "undefined") {
      setTimeout(checkTelegram, 100);
    }
  }, [priceUSD]);


  const handleTelegramPay = async () => {
    try {
      console.log("–°–æ–∑–¥–∞—ë–º —Å—á—ë—Ç –Ω–∞ Stars...", starsPrice);
  
      const res = await apiFetch("/api/orders/stars", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          userId: user.telegramId, // <-- –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
          title: "–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞",
          description: `–ü–æ–∫—É–ø–∫–∞ –∑–∞ ${starsPrice} Stars`,
          amount: starsPrice,
        }),
      });
  
      const data = await res.json();
      if (!data.invoice_url) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—á—ë—Ç");
  
      window.open(data.invoice_url, "_blank"); // –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É
    } catch (err) {
      console.error(err);
      toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—á—ë—Ç–∞");
    }
  };
  

  return (
    <div className="min-h-screen bg-gradient-to-br from-black via-indigo-900 to-black text-white">
      {/* Header */}
      <div className="flex items-center justify-between p-4 border-b border-gray-800">
        <button
          onClick={() => router.back()}
          className="p-2 hover:bg-gray-800 rounded-lg transition-colors"
          disabled={isLoading}
        >
          <ArrowLeft className="w-6 h-6 text-white" />
        </button>
        <h1 className="text-xl font-bold flex items-center gap-2">
          Stars
          <Star className="w-5 h-5 text-yellow-400" />
        </h1>
        <div className="w-10" />
      </div>

      {/* Content */}
      <div className="max-w-md mx-auto p-5">
        {/* –°—Ç–∞—Ç—É—Å Telegram WebApp */}
        <div className="mb-4 p-3 bg-gray-900 bg-opacity-50 border border-gray-700 rounded-lg">
          <div className="flex items-center gap-2">
            <div
              className={`w-3 h-3 rounded-full ${
                isTelegramAvailable ? "bg-green-500" : "bg-red-500"
              }`}
            />
            <span className="text-sm">
              {isTelegramAvailable
                ? "‚úÖ Telegram WebApp –∞–∫—Ç–∏–≤–µ–Ω"
                : "‚ö†Ô∏è Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"}
            </span>
          </div>
          {!isTelegramAvailable && (
            <p className="text-xs text-gray-400 mt-2">
              –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram –¥–ª—è –ª—É—á—à–µ–≥–æ –æ–ø—ã—Ç–∞
            </p>
          )}
        </div>

        <div className="bg-gray-900 bg-opacity-50 border border-indigo-500 rounded-2xl p-5">
          <h2 className="text-lg font-semibold text-indigo-400 mb-3">
            –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞:{" "}
            <span className="text-white">
              {starsPrice} ‚≠ê ({priceUSD}$)
            </span>
          </h2>

          <ul className="space-y-2">
            <li>üí´ –û–ø–ª–∞—Ç–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ Telegram Stars</li>
            <li>üí´ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û–ø–ª–∞—Ç–∏—Ç—å –≤ Telegram"</li>
            <li>üí´ –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–ª–∞—Ç—ë–∂</li>
          </ul>

          <p className="text-yellow-400 font-semibold mt-3 text-sm">
            * Stars —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Å –≤–∞—à–µ–≥–æ Telegram Wallet
          </p>
        </div>

        {/* Pay Button */}
        <button
          onClick={handleTelegramPay}
          disabled={isLoading}
          className={`w-full mt-5 rounded-xl py-3 font-semibold text-white transition ${
            isLoading
              ? "bg-gray-600 cursor-not-allowed"
              : "bg-indigo-600 hover:bg-indigo-700"
          }`}
        >
          {isLoading ? (
            <span className="flex items-center justify-center gap-2">
              <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin" />
              –û–±—Ä–∞–±–æ—Ç–∫–∞...
            </span>
          ) : (
            "–û–ø–ª–∞—Ç–∏—Ç—å Stars ‚≠ê"
          )}
        </button>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-5 p-4 bg-gray-800 bg-opacity-50 rounded-xl">
          <h3 className="text-sm font-semibold text-gray-300 mb-2">
            üìå –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
          </h3>
          <ul className="text-xs text-gray-400 space-y-1">
            <li>‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1 Star</li>
            <li>‚Ä¢ –û–ø–ª–∞—Ç–∞ –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è</li>
            <li>‚Ä¢ –í–æ–∑–≤—Ä–∞—Ç –≤–æ–∑–º–æ–∂–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 48 —á–∞—Å–æ–≤</li>
            <li>‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @support_bot</li>
          </ul>
        </div>
      </div>
    </div>
  );
}

export default function StarsPayPage() {
  return (
    <Suspense
      fallback={
        <div className="min-h-screen bg-gradient-to-br from-black via-indigo-900 to-black flex items-center justify-center">
          <div className="text-white text-xl">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
        </div>
      }
    >
      <StarsPayPageContent />
    </Suspense>
  );
}